!function(Q){var B={};function F(n){if(B[n])return B[n].exports;var s=B[n]={i:n,l:!1,exports:{}};return Q[n].call(s.exports,s,s.exports,F),s.l=!0,s.exports}F.m=Q,F.c=B,F.d=function(Q,B,n){F.o(Q,B)||Object.defineProperty(Q,B,{enumerable:!0,get:n})},F.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},F.t=function(Q,B){if(1&B&&(Q=F(Q)),8&B)return Q;if(4&B&&"object"==typeof Q&&Q&&Q.__esModule)return Q;var n=Object.create(null);if(F.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:Q}),2&B&&"string"!=typeof Q)for(var s in Q)F.d(n,s,function(B){return Q[B]}.bind(null,s));return n},F.n=function(Q){var B=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return F.d(B,"a",B),B},F.o=function(Q,B){return Object.prototype.hasOwnProperty.call(Q,B)},F.p="",F(F.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/Particle.js\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar incrementedId = 0;\n\nvar Particle = // kJ/mol\nfunction Particle(position, initVelocity) {\n  _classCallCheck(this, Particle);\n\n  _defineProperty(this, "name", \'Argon\');\n\n  _defineProperty(this, "pos", {\n    x: 0,\n    y: 0\n  });\n\n  _defineProperty(this, "oldPos", {\n    x: 0,\n    y: 0\n  });\n\n  _defineProperty(this, "epsilon", 0.997);\n\n  _defineProperty(this, "sigma", 3.40);\n\n  _defineProperty(this, "mass", 1);\n\n  _defineProperty(this, "id", incrementedId++);\n\n  this.pos = position;\n  this.oldPos.x = this.pos.x - initVelocity.x;\n  this.oldPos.y = this.pos.y - initVelocity.y;\n};\n\n\n// CONCATENATED MODULE: ./src/chunkArray.js\nfunction chunkArray(myArray, chunk_size) {\n  var index = 0;\n  var arrayLength = myArray.length;\n  var tempArray = [];\n\n  for (index = 0; index < arrayLength; index += chunk_size) {\n    var myChunk = myArray.slice(index, index + chunk_size); // Do something if you want with the group\n\n    tempArray.push(myChunk);\n  }\n\n  return tempArray;\n}\n// CONCATENATED MODULE: ./src/World.js\nfunction World_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction World_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\nvar World_World =\n/*#__PURE__*/\nfunction () {\n  function World() {\n    World_classCallCheck(this, World);\n\n    World_defineProperty(this, "particles", []);\n\n    World_defineProperty(this, "chunks", []);\n\n    World_defineProperty(this, "updates", []);\n\n    World_defineProperty(this, "workers", []);\n  }\n\n  _createClass(World, [{\n    key: "add",\n    value: function add(particle) {\n      this.particles.push(particle);\n    }\n  }, {\n    key: "optimiseChunks",\n    value: function optimiseChunks() {\n      var particlesPerWorker = Math.floor(this.particles.length / this.workers.length);\n      this.chunks = chunkArray(this.particles, particlesPerWorker);\n    }\n  }, {\n    key: "initWorkers",\n    value: function initWorkers() {\n      var num = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2;\n\n      if (typeof Worker === \'undefined\') {\n        throw new Error(\'Unsupported Browser\');\n      }\n\n      for (var i = 0; i < num; i++) {\n        var worker = new Worker(\'worker.js\');\n        worker.onmessage = this.registerUpdates.bind(this);\n        this.workers.push(worker);\n      }\n    }\n  }, {\n    key: "registerUpdates",\n    value: function registerUpdates(event) {\n      this.updates[event.data.chunkIndex] = event.data.updates;\n\n      if (this.updates.length && this.updates.length === this.chunks.length) {\n        this.applyUpdates();\n      }\n    }\n  }, {\n    key: "applyUpdates",\n    value: function applyUpdates() {\n      var numChunks = this.updates.length;\n\n      for (var i = 0; i < numChunks; i++) {\n        var numParticles = this.updates[i].length;\n\n        for (var j = 0; j < numParticles; j++) {\n          var update = this.updates[i][j];\n          var particle = this.chunks[i][j];\n          particle.oldPos.x = particle.pos.x;\n          particle.oldPos.y = particle.pos.y;\n          particle.pos.x += update.x;\n          particle.pos.y += update.y;\n        }\n      }\n\n      this.updates = [];\n    }\n  }, {\n    key: "updateParticles",\n    value: function updateParticles(dt) {\n      var _this = this;\n\n      this.chunks.forEach(function (chunk, i) {\n        _this.workers[i].postMessage({\n          chunk: chunk,\n          allParticles: _this.particles,\n          chunkIndex: i,\n          dt: dt\n        });\n      });\n    }\n  }]);\n\n  return World;\n}();\n\n\n// CONCATENATED MODULE: ./src/Renderer.js\nfunction Renderer_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Renderer_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Renderer_createClass(Constructor, protoProps, staticProps) { if (protoProps) Renderer_defineProperties(Constructor.prototype, protoProps); if (staticProps) Renderer_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Renderer_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Renderer =\n/*#__PURE__*/\nfunction () {\n  function Renderer(selector, world) {\n    Renderer_classCallCheck(this, Renderer);\n\n    Renderer_defineProperty(this, "world", null);\n\n    Renderer_defineProperty(this, "camera", null);\n\n    Renderer_defineProperty(this, "canvas", null);\n\n    Renderer_defineProperty(this, "context", null);\n\n    Renderer_defineProperty(this, "width", null);\n\n    Renderer_defineProperty(this, "height", null);\n\n    this.world = world;\n    this.canvas = document.querySelector(selector);\n    this.context = this.canvas.getContext(\'2d\');\n    this.width = this.canvas.width;\n    this.height = this.canvas.height;\n  }\n\n  Renderer_createClass(Renderer, [{\n    key: "setWorld",\n    value: function setWorld(newWorld) {\n      this.world = newWorld;\n    }\n  }, {\n    key: "renderParticles",\n    value: function renderParticles() {\n      var ctx = this.context;\n      ctx.clearRect(0, 0, this.width, this.height);\n\n      for (var i = 0; i < this.world.particles.length; i++) {\n        var p = this.world.particles[i];\n        var invv = 1 / Math.sqrt(Math.pow(p.pos.x - p.oldPos.x, 2) + Math.pow(p.pos.y - p.oldPos.y, 2)) / 50;\n        ctx.beginPath();\n        ctx.arc(p.pos.x, p.pos.y, 1, 0, Math.PI * 2);\n        ctx.fillStyle = "rgb(".concat(255 / invv, ", 0, 0)");\n        ctx.fill();\n      }\n    }\n  }]);\n\n  return Renderer;\n}();\n\n\n// CONCATENATED MODULE: ./src/index.js\n\n\n\nvar world = new World_World();\nworld.initWorkers(4);\nvar renderer = new Renderer(\'#canvas\', world); // Demo data\n\nvar offsetX = 100;\nvar offsetY = 100;\n\nfor (var x = 0; x < 30; x++) {\n  for (var y = 0; y < 20; y++) {\n    world.add(new Particle({\n      x: x * 4 + offsetX,\n      y: y * 4 + offsetY\n    }, {\n      x: (0.5 - Math.random()) / 10,\n      y: (0.5 - Math.random()) / 10\n    }));\n  }\n}\n\nworld.optimiseChunks(); // Main loop\n\nvar stepsPerFrame = 1;\nvar dt = 0.0001 / stepsPerFrame;\nvar ffps = 0;\n\nfunction update() {\n  for (var i = 0; i < stepsPerFrame; i++) {\n    world.updateParticles(dt);\n  }\n\n  renderer.renderParticles();\n  requestAnimationFrame(update);\n}\n\nupdate();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n')}]);